name: ü§ñ Auto-merge Dependencies

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    if: >
      github.event.pull_request.draft == false &&
      (
        github.event.pull_request.user.login == 'dependabot[bot]' ||
        github.event.pull_request.user.login == 'renovate[bot]'
      )
    runs-on: ubuntu-latest
    
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            // Check if it's a dependency update
            const isDependabot = pr.user.login === 'dependabot[bot]';
            const isRenovate = pr.user.login === 'renovate[bot]';
            
            const isSafeUpdate = 
              pr.title.includes('patch') || 
              pr.title.includes('minor') ||
              pr.title.includes('chore(deps)') ||
              pr.title.includes('fix(deps)') ||
              pr.body.includes('patch') ||
              pr.body.includes('minor');
            
            const isMajorUpdate = 
              pr.title.includes('major') ||
              pr.body.includes('major');
              
            return {
              isDependabot,
              isRenovate,
              isSafeUpdate,
              isMajorUpdate,
              shouldAutoMerge: (isDependabot || isRenovate) && isSafeUpdate && !isMajorUpdate
            };
            
      - name: Wait for checks
        if: fromJSON(steps.pr.outputs.result).shouldAutoMerge
        uses: fountainhead/action-wait-for-check@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'ci'  # Adjust to your CI check name
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 1800  # 30 minutes
          intervalSeconds: 30
          
      - name: Add auto-merge label
        if: fromJSON(steps.pr.outputs.result).shouldAutoMerge
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['ü§ñ auto-merge', 'dependencies']
            });
            
      - name: Comment on major updates
        if: fromJSON(steps.pr.outputs.result).isMajorUpdate
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `üö® **Major dependency update detected!**
            
            This PR contains major version updates that require manual review.
            
            Please:
            - üìñ Review the changelog for breaking changes
            - üß™ Test thoroughly before merging  
            - üîç Check for any required code changes
            
            Major updates are not auto-merged for safety.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['‚ö†Ô∏è major-update', 'needs-review', 'dependencies']
            });
            
      - name: Enable auto-merge
        if: fromJSON(steps.pr.outputs.result).shouldAutoMerge
        uses: actions/github-script@v7
        with:
          script: |
            // Enable auto-merge with squash
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE',
              body: 'ü§ñ Auto-approved by dependency bot workflow. Safe dependency update detected.'
            });
            
            // Try to enable auto-merge (requires branch protection rules)
            try {
              await github.rest.pulls.enableAutoMerge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                merge_method: 'squash'
              });
              
              console.log('Auto-merge enabled successfully');
            } catch (error) {
              console.log('Could not enable auto-merge (branch protection may not be configured):', error.message);
              
              // If auto-merge fails, add a comment explaining
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `‚úÖ This dependency update has been approved and is safe to merge.
                
                ü§ñ Auto-merge was attempted but requires branch protection rules to be configured.
                
                You can merge this PR manually when ready.`
              });
            }

